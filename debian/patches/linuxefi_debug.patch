From 519c28e1053a5d5e398120a577384d5162b48c77 Mon Sep 17 00:00:00 2001
From: Colin Watson <cjwatson@ubuntu.com>
Date: Mon, 13 Jan 2014 12:13:18 +0000
Subject: Add more debugging to linuxefi

Forwarded: no
Last-Update: 2016-09-19

Patch-Name: linuxefi_debug.patch
---
 grub-core/loader/efi/linux.c      |   15 +++++++++++++--
 grub-core/loader/i386/efi/linux.c |    8 ++++++++
 2 files changed, 21 insertions(+), 2 deletions(-)

Index: b/grub-core/loader/i386/efi/linux.c
===================================================================
--- a/grub-core/loader/i386/efi/linux.c
+++ b/grub-core/loader/i386/efi/linux.c
@@ -19,6 +19,7 @@
 #include <grub/loader.h>
 #include <grub/file.h>
 #include <grub/err.h>
+#include <grub/misc.h>
 #include <grub/types.h>
 #include <grub/mm.h>
 #include <grub/cpu/linux.h>
@@ -114,6 +115,8 @@ grub_cmd_initrd (grub_command_t cmd __at
       goto fail;
     }
 
+  grub_dprintf ("linuxefi", "initrd_mem = %lx\n", (unsigned long) initrd_mem);
+
   params->ramdisk_size = size;
   params->ramdisk_image = (grub_uint32_t)(grub_addr_t) initrd_mem;
 
@@ -201,6 +204,8 @@ grub_cmd_linux (grub_command_t cmd __att
       goto fail;
     }
 
+  grub_dprintf ("linuxefi", "params = %lx\n", (unsigned long) params);
+
   grub_memset (params, 0, 16384);
 
   grub_memcpy (&lh, kernel, sizeof (lh));
@@ -238,6 +243,9 @@ grub_cmd_linux (grub_command_t cmd __att
       goto fail;
     }
 
+  grub_dprintf ("linuxefi", "linux_cmdline = %lx\n",
+		(unsigned long) linux_cmdline);
+
   grub_memcpy (linux_cmdline, LINUX_IMAGE, sizeof (LINUX_IMAGE));
   grub_create_loader_cmdline (argc, argv,
                               linux_cmdline + sizeof (LINUX_IMAGE) - 1,
Index: b/grub-core/loader/efi/linux.c
===================================================================
--- a/grub-core/loader/efi/linux.c
+++ b/grub-core/loader/efi/linux.c
@@ -40,15 +40,26 @@ grub_linuxefi_secure_validate (void *dat
   grub_efi_shim_lock_t *shim_lock;
   grub_efi_status_t status;
 
+  grub_dprintf ("linuxefi", "Locating shim protocol\n");
   shim_lock = grub_efi_locate_protocol(&guid, NULL);
   grub_dprintf ("secureboot", "shim_lock: %p\n", shim_lock);
   if (!shim_lock)
-    return 0;
+    {
+      grub_dprintf ("linuxefi", "shim not available\n");
+      return 0;
+    }
 
+  grub_dprintf ("linuxefi", "Asking shim to verify kernel signature\n");
   status = shim_lock->verify(data, size);
   grub_dprintf ("secureboot", "shim_lock->verify(): %ld\n", status);
   if (status == GRUB_EFI_SUCCESS)
-    return 1;
+    {
+      grub_dprintf ("linuxefi", "Kernel signature verification passed\n");
+      return 1;
+    }
+
+  grub_dprintf ("linuxefi", "Kernel signature verification failed (0x%lx)\n",
+		(unsigned long) status);
 
   return -1;
 }
